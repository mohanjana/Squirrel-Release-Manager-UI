<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro">

    <ControlTemplate x:Key="GlassButton" TargetType="{x:Type Button}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="Storyboard1">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Glow">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="Storyboard2">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Glow">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Border BorderBrush="{x:Null}" BorderThickness="1" CornerRadius="4">
            <Border x:Name="border" BorderThickness="1" BorderBrush="Black" CornerRadius="4">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#4C003EFF"/>
                        <GradientStop Color="#3398D7FF" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.5*"/>
                        <RowDefinition Height="0.5*"/>
                    </Grid.RowDefinitions>
                    <Border x:Name="Glow" BorderBrush="{x:Null}" BorderThickness="0" HorizontalAlignment="Stretch" Margin="0,0,0,0.96" Grid.RowSpan="2" CornerRadius="4" Opacity="0">
                        <Border.Background>
                            <RadialGradientBrush RadiusX="0.795" RadiusY="0.98" Center="0.5,0.99" GradientOrigin="0.5,0.99">
                                <GradientStop Color="#B20023FF" Offset="0"/>
                                <GradientStop Color="#0076E9F1" Offset="1"/>
                            </RadialGradientBrush>
                        </Border.Background>
                    </Border>
                    <ContentPresenter HorizontalAlignment="Center" Margin="0,0,0,0.96" Grid.RowSpan="2" VerticalAlignment="Center"/>
                    <Border x:Name="Shine" BorderBrush="{x:Null}" BorderThickness="0" HorizontalAlignment="Stretch" Margin="0" Grid.RowSpan="1" Width="Auto" CornerRadius="4,4,0,0" Height="Auto">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#99FFFFFF" Offset="0"/>
                                <GradientStop Color="#33FFFFFF" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                </Grid>
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Visibility" TargetName="Glow" Value="Hidden"/>
                <Setter Property="Opacity" TargetName="Shine" Value="0.4"/>
                <Setter Property="Opacity" TargetName="border" Value="0.8"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="Storyboard2_BeginStoryboard" Storyboard="{StaticResource Storyboard2}"/>
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
                </Trigger.EnterActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="CustomDefaultWindowStyle"
       TargetType="{x:Type Controls:MetroWindow}"
       BasedOn="{StaticResource {x:Type Controls:MetroWindow}}" >
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>

    <Style x:Key="ButtonFocusVisual">
        <Setter
            Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MetroButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="#1e64ae"/>
        <Setter Property="Foreground" Value="#E3F2FD"/>
        <Setter Property="BorderBrush" Value="#1e64ae"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="10 5"/>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Height" Value="30" />
        <Setter Property="BorderThickness" Value="0" />        
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Margin" Value="10,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                                x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />

                        <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="OpacityMask" Value="#AA888888"/>
                            <Setter Property="Margin" Value="2 1" />
                            <Setter Property="Margin" Value="10,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderThickness" Value="2"/>
                            <Setter Property="BorderBrush" Value="#64B5F6"/>
                            <Setter Property="Background" Value="#64B5F6"/>
                            <Setter Property="Foreground" Value="#E3F2FD"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Name="BasicTextBox" TargetType="TextBox">
        <Setter Property="Height" Value="23"/>
        <!--<Setter Property="Width" Value="350"/>-->
        <Setter Property="VerticalContentAlignment" Value="Center"/>                
    </Style>

    <Style x:Name="BasicPasswordBox" TargetType="PasswordBox">
        <Setter Property="Height" Value="23"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <Style x:Name="BasicLabel" TargetType="Label">
        <Setter Property="Height" Value="27"/>
        <Setter Property="Width" Value="150"/>
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
    </Style>
    
    <Style x:Name="BasicStackPanel" TargetType="StackPanel">
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>

    <Style x:Name="BasicComboBox" TargetType="ComboBox">
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="23"/>
    </Style>

    <Style x:Name="BasicButton" TargetType="Button" BasedOn="{StaticResource MetroButton}">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="75"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <Style x:Name="BasicListBox" TargetType="ListBox">
        <Setter Property="Margin" Value="5"/>
    </Style>
    
    <Style x:Name="BasicListBoxItem" TargetType="ListBoxItem">
        <Setter Property="Margin" Value="1"/>
    </Style>

    <Style TargetType="{x:Type DataGridRow}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Enabled}" Value="True">
                <Setter Property="Background" Value="#FF3174FF" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Enabled}" Value="False">
                <Setter Property="Background" Value="#FF48BCFF" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Name="BasicImage" TargetType="Image">
        <Setter Property="Cursor" Value="Hand"/>
    </Style>

    <Style x:Name="BasicCheckBox" TargetType="CheckBox">
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Name="BasicGroupBox" TargetType="GroupBox">
        <Setter Property="Margin" Value="0"/>
    </Style>

    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Height" Value="25" />
        <Setter Property="SeparatorBrush" Value="Transparent" />
        <Setter Property="FontWeight" Value="Bold" />
        <!--<Setter Property="Background" Value="#FFC4E0FF"/>-->
    </Style>

</ResourceDictionary>